# new schema 

deployment:
  type: "continuous"
  rate: 0.25 #seconds

modules: 
  
  p4p_server:
    name: "p4p_server" # overrides the top key
    type: "interface.p4p_server"
    pub: "in_interface"
    sub: 
      - "get_all"
      - "out_transformer" # look we can do this now!               
    module_args: None # defines what arguments to pass to the module observer, if any this can inform unpacking etc
    config: 
      EPICS_PVA_NAME_SERVERS: "talos.isis.rl.ac.uk:5075"
      variables:
        LUME:MLFLOW:TEST_B:
          proto: pva
          name: LUME:MLFLOW:TEST_B 
        LUME:MLFLOW:TEST_A:
          proto: pva
          name: LUME:MLFLOW:TEST_A
        LUME:MLFLOW:TEST_S:
          proto: pva
          name: LUME:MLFLOW:TEST_S
  
  input_transformer:
    name: "input_transformer"
    type: "transformer.SimpleTransformer"
    pub: "in_transformer"
    sub: "in_interface"
    module_args: None
    config:
      symbols:
        - "LUME:MLFLOW:TEST_B"
        - "LUME:MLFLOW:TEST_A"
      variables:
        x:
          formula: "LUME:MLFLOW:TEST_B"
        y: 
          formula: "LUME:MLFLOW:TEST_A"
  model:
    name: "model"
    type: "model.SimpleModel"
    pub: "model"
    sub: "in_transformer"
    module_args: None
    config:
      type: "MlflowModelGetter"
      args:
        model_name: "SimpleModel"
        model_version : 4
      variables:
        y:
          type: "scalar"
  output_transformer:
    name: "output_transformer"
    type: "transformer.SimpleTransformer"
    pub: "out_transformer"
    sub: 
      - "model"
    module_args: 
      unpack_data: True
    config:
      symbols:
        - "output"
      variables:
        LUME:MLFLOW:TEST_S:
          formula: "output"


    